{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelectorAll","table","querySelector","listSorting","list","sortParam","listEmployees","slice","sort","a","b","children","innerText","salaryToNumber","localeCompare","string","split","join","addEventListener","e","target","closest","employeesSorted","map","row","cell","i","forEach","index","length"],"mappings":";AAAA,aA8CC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5CD,IAAMA,EAAYC,SAASC,iBAAiB,MACtCC,EAAQF,SAASG,cAAc,SAiBrC,SAASC,EAAYC,EAAMC,GAGlBC,OAFe,EAAIF,GAAMG,MAAM,GAAI,GAErBC,KAAK,SAACC,EAAGC,GACpBL,OAAAA,GACD,IAAA,MACI,OAACI,EAAEE,SAAS,GAAGC,WAAaF,EAAEC,SAAS,GAAGC,UAE9C,IAAA,SACIC,OAAAA,EAAeJ,EAAEE,SAAS,GAAGC,WAChCC,EAAeH,EAAEC,SAAS,GAAGC,WAE9B,IAAA,OACKH,OAAAA,EAAEE,SAAS,GAAGC,UAAWE,cAAcJ,EAAEC,SAAS,GAAGC,WAE1D,IAAA,WACKH,OAAAA,EAAEE,SAAS,GAAGC,UAAWE,cAAcJ,EAAEC,SAAS,GAAGC,cAQrE,SAASC,EAAeE,GACf,OAACA,EAAOR,MAAM,GAAGS,MAAM,KAAKC,KAAK,IAxC1ChB,EAAMiB,iBAAiB,QAAS,SAACC,GACzBd,IAAAA,EAAYc,EAAEC,OAAOC,QAAQ,MAAMT,UAErCP,GAAW,WAIR,IAHCiB,IAAAA,EAAkB,EAAInB,EAAYL,EAAWO,IAChDkB,IAAI,SAAAC,GAAO,OAAA,EAAIA,EAAIb,UAAUY,IAAI,SAAAE,GAAQA,OAAAA,EAAKb,cAExCc,EAAAA,SAAAA,GACH5B,EAAAA,EAAU4B,GAAGf,UAAUgB,QAAQ,SAACF,EAAMG,GACxCH,EAAKb,UAAYU,EAAgBI,EAAI,GAAGE,MAFnCF,EAAI,EAAGA,EAAI5B,EAAU+B,OAAS,EAAGH,IAAjCA,EAAAA,GAJI","file":"main.bec3ae52.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employees = document.querySelectorAll('tr');\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', (e) => {\n  const sortParam = e.target.closest('th').innerText;\n\n  if (sortParam) {\n    const employeesSorted = [...listSorting(employees, sortParam)]\n      .map(row => [...row.children].map(cell => cell.innerText));\n\n    for (let i = 1; i < employees.length - 1; i++) {\n      [...employees[i].children].forEach((cell, index) => {\n        cell.innerText = employeesSorted[i - 1][index];\n      });\n    }\n  }\n});\n\nfunction listSorting(list, sortParam) {\n  const listEmployees = [...list].slice(1, -1);\n\n  return listEmployees.sort((a, b) => {\n    switch (sortParam) {\n      case 'Age':\n        return +a.children[2].innerText - +b.children[2].innerText;\n\n      case 'Salary':\n        return salaryToNumber(a.children[3].innerText)\n          - salaryToNumber(b.children[3].innerText);\n\n      case 'Name':\n        return (a.children[0].innerText).localeCompare(b.children[0].innerText);\n\n      case 'Position':\n        return (a.children[1].innerText).localeCompare(b.children[1].innerText);\n\n      default:\n        break;\n    }\n  });\n};\n\nfunction salaryToNumber(string) {\n  return +string.slice(1).split(',').join('');\n};\n"]}